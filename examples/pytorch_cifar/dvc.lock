schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          generate:
            name: torch_cifar10
          sample:
            random_state: 0
            stratify: true
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pt
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            data:
              _target_: deckard.base.data.Data
              generate:
                name: torch_cifar10
              sample:
                random_state: 0
                stratify: true
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            initialize:
              clip_values:
              - 0.0
              - 1.0
              criterion:
                name: torch.nn.CrossEntropyLoss
              optimizer:
                lr: 0.01
                momentum: 0.9
                name: torch.optim.SGD
            library: pytorch
          data:
            _target_: deckard.base.data.Data
            generate:
              name: torch_cifar10
            sample:
              random_state: 0
              stratify: true
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.model.ModelInitializer
            name: torch_example.ResNet18
            num_channels: 3
            num_classes: 10
          library: pytorch
          trainer:
            batch_size: 1024
            nb_epoch: 20
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/data/data.pkl
      md5: 6503fed5d4e6cc1163898c0ab6a863dd
      size: 739680311
    - path: output/models/model.optimizer.pt
      md5: f5b6422f339473318808616c7fb926c4
      size: 44805933
    - path: output/models/model.pt
      md5: c7a6c14dc3dc96868cb9f3b93d7d31ba
      size: 44811029
    - path: output/reports/train/default/params.yaml
      md5: 320abf8eddbae67cd6873f8d1e3bba81
      size: 2174
    - path: output/reports/train/default/predictions.json
      md5: ed5c6a014bf8fc8ee4aadacc3c5cb07c
      size: 2437716
    - path: output/reports/train/default/score_dict.json
      md5: 368af71ad6cf7bf06b64ffeb109a2da9
      size: 412
  attack:
    cmd: python -m deckard.layers.experiment attack
    deps:
    - path: output/data/data.pkl
      md5: 6503fed5d4e6cc1163898c0ab6a863dd
      size: 739680311
    - path: output/models/model.pt
      md5: 40384588691c0c813a1bd0406f0dd7b0
      size: 44811477
    params:
      params.yaml:
        attack:
          _target_: deckard.base.attack.Attack
          attack_size: 10
          data:
            _target_: deckard.base.data.Data
            generate:
              name: torch_cifar10
            sample:
              random_state: 0
              stratify: true
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.attack.AttackInitializer
            model:
              _target_: deckard.base.model.Model
              art:
                _target_: deckard.base.model.art_pipeline.ArtPipeline
                data:
                  _target_: deckard.base.data.Data
                  generate:
                    name: torch_cifar10
                  sample:
                    random_state: 0
                    stratify: true
                  sklearn_pipeline:
                    preprocessor:
                      name: sklearn.preprocessing.StandardScaler
                      with_mean: true
                      with_std: true
                initialize:
                  clip_values:
                  - 0.0
                  - 1.0
                  criterion:
                    name: torch.nn.CrossEntropyLoss
                  optimizer:
                    lr: 0.01
                    momentum: 0.9
                    name: torch.optim.SGD
                library: pytorch
              data:
                _target_: deckard.base.data.Data
                generate:
                  name: torch_cifar10
                sample:
                  random_state: 0
                  stratify: true
                sklearn_pipeline:
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              init:
                _target_: deckard.base.model.ModelInitializer
                name: torch_example.ResNet18
                num_channels: 3
                num_classes: 10
              library: pytorch
              trainer:
                batch_size: 1024
                nb_epoch: 20
            name: art.attacks.evasion.HopSkipJump
          method: evasion
          model:
            _target_: deckard.base.model.Model
            art:
              _target_: deckard.base.model.art_pipeline.ArtPipeline
              data:
                _target_: deckard.base.data.Data
                generate:
                  name: torch_cifar10
                sample:
                  random_state: 0
                  stratify: true
                sklearn_pipeline:
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              initialize:
                clip_values:
                - 0.0
                - 1.0
                criterion:
                  name: torch.nn.CrossEntropyLoss
                optimizer:
                  lr: 0.01
                  momentum: 0.9
                  name: torch.optim.SGD
              library: pytorch
            data:
              _target_: deckard.base.data.Data
              generate:
                name: torch_cifar10
              sample:
                random_state: 0
                stratify: true
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            init:
              _target_: deckard.base.model.ModelInitializer
              name: torch_example.ResNet18
              num_channels: 3
              num_classes: 10
            library: pytorch
            trainer:
              batch_size: 1024
              nb_epoch: 20
        data:
          _target_: deckard.base.data.Data
          generate:
            name: torch_cifar10
          sample:
            random_state: 0
            stratify: true
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pt
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            data:
              _target_: deckard.base.data.Data
              generate:
                name: torch_cifar10
              sample:
                random_state: 0
                stratify: true
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            initialize:
              clip_values:
              - 0.0
              - 1.0
              criterion:
                name: torch.nn.CrossEntropyLoss
              optimizer:
                lr: 0.01
                momentum: 0.9
                name: torch.optim.SGD
            library: pytorch
          data:
            _target_: deckard.base.data.Data
            generate:
              name: torch_cifar10
            sample:
              random_state: 0
              stratify: true
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.model.ModelInitializer
            name: torch_example.ResNet18
            num_channels: 3
            num_classes: 10
          library: pytorch
          trainer:
            batch_size: 1024
            nb_epoch: 20
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/attacks/attack.pkl
      md5: 15b48cee382acf8d99438fac5b857d67
      size: 123046
    - path: output/reports/attack/default/adv_predictions.json
      md5: 323486a7174afe1d1dcd42d4a86cc304
      size: 2167
    - path: output/reports/attack/default/params.yaml
      md5: 5177666d7f2e1e55ccad8ab4b735ffc7
      size: 5175
    - path: output/reports/attack/default/score_dict.json
      md5: 2ccb898d65b13714b26de3dd467ba306
      size: 541
  attacks@ResNet18:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet18
      ++stage=attack ++hydra.sweeper.storage=sqlite:///ResNet18.db --config-name default.yaml
    deps:
    - path: attacks.sh
      md5: 2fbda0d22c03c74392639ffa29319023
      size: 3080
    - path: models.sh
      md5: 9916f8e39b8342a0e9407859fb554021
      size: 1293
    - path: output/reports/attack/default/score_dict.json
      md5: f7d7a6af006d36105a9449dbf1a00715
      size: 535
    outs:
    - path: ResNet18.db
      md5: 8add8533355f91c1c2e23ed2bc8b720b
      size: 1232896
  attacks@ResNet34:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet34
      ++stage=attack ++hydra.sweeper.storage=sqlite:///ResNet34.db --config-name default.yaml
    deps:
    - path: attacks.sh
      md5: 2fbda0d22c03c74392639ffa29319023
      size: 3080
    - path: models.sh
      md5: cd924674997af182b42d07a08bbc9034
      size: 1431
    - path: output/reports/attack/default/score_dict.json
      md5: bd2742460f844eebe8bd411aa8ebd5de
      size: 530
    outs:
    - path: ResNet34.db
      md5: f3084028f22eb073b578c9eb81f6795c
      size: 159744
  attacks@ResNet50:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet50
      ++stage=attack ++hydra.sweeper.storage=sqlite:///ResNet50.db --config-name default.yaml
    deps:
    - path: attacks.sh
      md5: 2fbda0d22c03c74392639ffa29319023
      size: 3080
    - path: models.sh
      md5: 9916f8e39b8342a0e9407859fb554021
      size: 1293
    - path: output/reports/attack/default/score_dict.json
      md5: f7d7a6af006d36105a9449dbf1a00715
      size: 535
    outs:
    - path: ResNet50.db
      md5: 88ab82137f4fd2f0384e6b7bae7ae11f
      size: 626688
  attacks@ResNet101:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet101
      ++stage=attack ++hydra.sweeper.storage=sqlite:///ResNet101.db --config-name
      default.yaml
    deps:
    - path: attacks.sh
      md5: 2fbda0d22c03c74392639ffa29319023
      size: 3080
    - path: models.sh
      md5: cd924674997af182b42d07a08bbc9034
      size: 1431
    - path: output/reports/attack/default/score_dict.json
      md5: bd2742460f844eebe8bd411aa8ebd5de
      size: 530
    outs:
    - path: ResNet101.db
      md5: 8a40cf29e97c400163c55d790153a270
      size: 307200
  attacks@ResNet152:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet152
      ++stage=attack ++hydra.sweeper.storage=sqlite:///ResNet152.db --config-name
      default.yaml
    deps:
    - path: attacks.sh
      md5: 2fbda0d22c03c74392639ffa29319023
      size: 3080
    - path: models.sh
      md5: cd924674997af182b42d07a08bbc9034
      size: 1431
    - path: output/reports/attack/default/score_dict.json
      md5: bd2742460f844eebe8bd411aa8ebd5de
      size: 530
    outs:
    - path: ResNet152.db
      md5: 1cef8992168089daa34f547c004798b3
      size: 159744
  compile@attack:
    cmd: python -m deckard.layers.compile --report_folder output/reports/attack --results_file
      output/reports/attack.csv
    deps:
    - path: ResNet101.db
      md5: 8a40cf29e97c400163c55d790153a270
      size: 307200
    - path: ResNet152.db
      md5: 1cef8992168089daa34f547c004798b3
      size: 159744
    - path: ResNet18.db
      md5: 0b651c201f96fbedf11f43b819576769
      size: 159744
    - path: ResNet34.db
      md5: f3084028f22eb073b578c9eb81f6795c
      size: 159744
    - path: ResNet50.db
      md5: b6cd8bf315fa750cdb070b434bcf3681
      size: 159744
    - path: output/reports/attack/
      md5: 8d5687b35d86d450438ebb3045054849.dir
      size: 1995487004
      nfiles: 14559
    outs:
    - path: output/reports/attack.csv
      md5: eab7fb13e62e581fbcc11454c88d9a2b
      size: 10878957
  plot:
    cmd: python plots.py --path output/plots/ --file output/reports/attack.csv
    deps:
    - path: ResNet152.db
      md5: df66e7a40e4e692513c136b2811cb8c7
      size: 258048
    - path: ResNet18.db
      md5: 8add8533355f91c1c2e23ed2bc8b720b
      size: 1232896
    - path: ResNet50.db
      md5: 88ab82137f4fd2f0384e6b7bae7ae11f
      size: 626688
    - path: output/reports/attack.csv
      md5: b64b7c2b6d8cf3015e5945affb42890b
      size: 4032195
    outs:
    - path: output/plots/
      md5: f0a9887f2f9ee5042004b36136326197.dir
      size: 375907
      nfiles: 13
