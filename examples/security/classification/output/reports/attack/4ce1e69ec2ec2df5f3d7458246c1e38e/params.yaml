attack:
  attack_size: 100
  data:
    generate:
      kwargs:
        n_features: 100
        n_informative: 99
        n_redundant: 0
        n_repeated: 0
        n_samples: 11100
        random_state: 0
      name: classification
    name: a64858fac5ed02f8fc79116d3cdf6c22
    sample:
      random_state: 0
      shuffle: true
      stratify: true
      test_size: 1000
      time_series: false
      train_size: 10000
    sklearn_pipeline:
      pipeline:
        preprocessor:
          kwargs:
            with_mean: true
            with_std: true
          name: sklearn.preprocessing.StandardScaler
  init:
    kwargs:
      batch_size: 1
      eps: 0.3
      eps_step: 0.1
      max_iter: 1000
      norm: 2
    model:
      art:
        library: sklearn-svc
        name: 37e40fba19cda476dad12a95c79baf44
        pipeline: {}
      data:
        generate:
          kwargs:
            n_features: 100
            n_informative: 99
            n_redundant: 0
            n_repeated: 0
            n_samples: 11100
            random_state: 0
          name: classification
        name: a64858fac5ed02f8fc79116d3cdf6c22
        sample:
          random_state: 0
          shuffle: true
          stratify: true
          test_size: 1000
          time_series: false
          train_size: 10000
        sklearn_pipeline:
          pipeline:
            preprocessor:
              kwargs:
                with_mean: true
                with_std: true
              name: sklearn.preprocessing.StandardScaler
      init:
        kwargs:
          kwargs:
            C: 1000
            coef0: 0.01
            gamma: scale
            kernel: rbf
            max_iter: 10
            probability: true
            random_state: 0
        name: sklearn.svm.SVC
      library: sklearn-svc
      name: bbc3781be6645662ab8fa6536aefcb46
      trainer:
        kwargs:
          kwargs: {}
    name: art.attacks.evasion.ProjectedGradientDescent
  kwargs: {}
  method: evasion
  model:
    art:
      library: sklearn-svc
      name: 9b86c9b0cfb8d5e872a0126c0611580a
      pipeline:
        initialize:
          kwargs: {}
          name: initialize
    data:
      generate:
        kwargs:
          n_features: 100
          n_informative: 99
          n_redundant: 0
          n_repeated: 0
          n_samples: 11100
          random_state: 0
        name: classification
      name: a64858fac5ed02f8fc79116d3cdf6c22
      sample:
        random_state: 0
        shuffle: true
        stratify: true
        test_size: 1000
        time_series: false
        train_size: 10000
      sklearn_pipeline:
        pipeline:
          preprocessor:
            kwargs:
              with_mean: true
              with_std: true
            name: sklearn.preprocessing.StandardScaler
    init:
      kwargs:
        C: 1000
        coef0: 0.01
        gamma: scale
        kernel: rbf
        max_iter: 10
        probability: true
        random_state: 0
      name: sklearn.svm.SVC
    library: sklearn-svc
    name: edd1e5ee431b09141af50a5714b2a5f7
    trainer:
      kwargs: {}
  name: 08be4209293859526bf26bb631cd3052
data:
  generate:
    kwargs:
      n_features: 100
      n_informative: 99
      n_redundant: 0
      n_repeated: 0
      n_samples: 11100
      random_state: 0
    name: classification
  name: a64858fac5ed02f8fc79116d3cdf6c22
  sample:
    random_state: 0
    shuffle: true
    stratify: true
    test_size: 1000
    time_series: false
    train_size: 10000
  sklearn_pipeline:
    pipeline:
      preprocessor:
        kwargs:
          with_mean: true
          with_std: true
        name: sklearn.preprocessing.StandardScaler
files:
  data_dir: data
  files:
    adv_predictions_file: output/reports/attack/4ce1e69ec2ec2df5f3d7458246c1e38e/adv_predictions.json
    adv_probabilities_file: output/reports/attack/4ce1e69ec2ec2df5f3d7458246c1e38e/adv_probabilities.json
    attack_file: output/attacks/519edd5db419e1756c387a967b9e01c6.pkl
    data_file: output/data/a858116080834fd47b74ae783316fef9.pkl
    model_file: output/models/a15d66ce38a9235de45d6361fa42b01a.pkl
    params_file: output/reports/attack/4ce1e69ec2ec2df5f3d7458246c1e38e/params.yaml
    predictions_file: output/reports/attack/4ce1e69ec2ec2df5f3d7458246c1e38e/predictions.json
    probabilities_file: output/reports/attack/4ce1e69ec2ec2df5f3d7458246c1e38e/probabilities.json
    score_dict_file: output/reports/attack/4ce1e69ec2ec2df5f3d7458246c1e38e/score_dict.json
    test_labels_file: output/reports/attack/4ce1e69ec2ec2df5f3d7458246c1e38e/test_labels.json
    train_labels_file: output/reports/attack/4ce1e69ec2ec2df5f3d7458246c1e38e/train_labels.json
  model_dir: models
  name: 4ce1e69ec2ec2df5f3d7458246c1e38e
  reports: reports
  stage: attack
kwargs:
  direction: minimize
model:
  art:
    library: sklearn-svc
    name: 9b86c9b0cfb8d5e872a0126c0611580a
    pipeline:
      initialize:
        kwargs: {}
        name: initialize
  data:
    generate:
      kwargs:
        n_features: 100
        n_informative: 99
        n_redundant: 0
        n_repeated: 0
        n_samples: 11100
        random_state: 0
      name: classification
    name: a64858fac5ed02f8fc79116d3cdf6c22
    sample:
      random_state: 0
      shuffle: true
      stratify: true
      test_size: 1000
      time_series: false
      train_size: 10000
    sklearn_pipeline:
      pipeline:
        preprocessor:
          kwargs:
            with_mean: true
            with_std: true
          name: sklearn.preprocessing.StandardScaler
  init:
    kwargs:
      C: 1000
      coef0: 0.01
      gamma: scale
      kernel: rbf
      max_iter: 10
      probability: true
      random_state: 0
    name: sklearn.svm.SVC
  library: sklearn-svc
  name: edd1e5ee431b09141af50a5714b2a5f7
  trainer:
    kwargs: {}
name: 4ce1e69ec2ec2df5f3d7458246c1e38e
scorers:
  scorers:
    accuracy:
      alias: accuracy_score
      args:
      - y_true
      - y_pred
      direction: maximize
      name: sklearn.metrics.accuracy_score
      params: {}
    log_loss:
      alias: log_loss
      args:
      - y_true
      - y_pred
      direction: minimize
      name: sklearn.metrics.log_loss
      params: {}
