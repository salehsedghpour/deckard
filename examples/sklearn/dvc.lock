schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          generate:
            n_features: 20
            n_samples: 1100
            name: classification
            random_state: 0
          sample:
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 100
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            generate:
              n_features: 20
              n_samples: 1100
              name: classification
              random_state: 0
            sample:
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 100
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 100
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/data/data.pkl
      hash: md5
      md5: af3fa729fa7f76213685ca4e51b80bb2
      size: 185102
    - path: output/models/model.pkl
      hash: md5
      md5: 8f9bb89ea877a37e005fb9d12d6538a0
      size: 15185
    - path: output/reports/train/default/score_dict.json
      hash: md5
      md5: 110eccb7dbf05b7c31f7ab2e423b827c
      size: 349
  attack:
    cmd: python -m deckard.layers.experiment attack
    deps:
    - path: output/data/data.pkl
      hash: md5
      md5: af3fa729fa7f76213685ca4e51b80bb2
      size: 185102
    - path: output/models/model.pkl
      hash: md5
      md5: 27225f126e831ab39e47b6b9386ab36b
      size: 15219
    params:
      params.yaml:
        attack:
          _target_: deckard.base.attack.Attack
          attack_size: 10
          data:
            _target_: deckard.base.data.Data
            generate:
              n_features: 20
              n_samples: 1100
              name: classification
              random_state: 0
            sample:
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 100
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            model:
              _target_: deckard.base.model.Model
              art:
                _target_: deckard.base.model.art_pipeline.ArtPipeline
                initialize:
                library: sklearn-svc
              data:
                _target_: deckard.base.data.Data
                generate:
                  n_features: 20
                  n_samples: 1100
                  name: classification
                  random_state: 0
                sample:
                  random_state: 0
                  stratify: true
                  test_size: 1000
                  train_size: 100
                sklearn_pipeline:
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              init:
                C: 1.0
                _target_: deckard.base.model.ModelInitializer
                kernel: rbf
                max_iter: 100
                name: sklearn.svm.SVC
                probability: true
                random_state: 0
              library: sklearn-svc
            name: art.attacks.evasion.HopSkipJump
          method: evasion
          model:
            _target_: deckard.base.model.Model
            art:
              _target_: deckard.base.model.art_pipeline.ArtPipeline
              initialize:
              library: sklearn-svc
            data:
              _target_: deckard.base.data.Data
              generate:
                n_features: 20
                n_samples: 1100
                name: classification
                random_state: 0
              sample:
                random_state: 0
                stratify: true
                test_size: 1000
                train_size: 100
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            init:
              C: 1.0
              _target_: deckard.base.model.ModelInitializer
              kernel: rbf
              max_iter: 100
              name: sklearn.svm.SVC
              probability: true
              random_state: 0
            library: sklearn-svc
        data:
          _target_: deckard.base.data.Data
          generate:
            n_features: 20
            n_samples: 1100
            name: classification
            random_state: 0
          sample:
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 100
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            generate:
              n_features: 20
              n_samples: 1100
              name: classification
              random_state: 0
            sample:
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 100
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 100
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/reports/attack/default/adv_probabilities.json
      hash: md5
      md5: 4456666e66f153b50572072e83be3e47
      size: 425
    - path: output/reports/attack/default/score_dict.json
      hash: md5
      md5: 4b858a5872bfe2aa828a0f064c55f4ea
      size: 486
  model_search:
    cmd: bash models.sh +stage=train +optimizers=accuracy ++hydra.sweeper.storage=sqlite:///model.db
      ++hydra.sweeper.study_name=model ++hydra.sweeper.direction=maximize ++direction=maximize
      --multirun --config-name model.yaml
    deps:
    - path: models.sh
      hash: md5
      md5: b20bba54353be244dc917518b03ef007
      size: 705
    - path: output/reports/attack/default/adv_probabilities.json
      hash: md5
      md5: 4456666e66f153b50572072e83be3e47
      size: 425
    outs:
    - path: model.db
      hash: md5
      md5: c354d3816bc0526c0e94d9fd0a537e72
      size: 217088
  find_best_model:
    cmd: python -m deckard.layers.find_best model.yaml
    deps:
    - path: model.db
      hash: md5
      md5: c354d3816bc0526c0e94d9fd0a537e72
      size: 217088
    outs:
    - path: conf/model/best.yaml
      hash: md5
      md5: 9f9bd5f3433134a0bf966456a0d150aa
      size: 674
  attack_search:
    cmd: bash attacks.sh ++stage=attack ++optimizers=adv_accuracy ++hydra.sweeper.storage=sqlite:///attack.db
      ++hydra.sweeper.study_name=attack ++hydra.sweeper.direction=minimize ++direction=minimize
      ++attack.init.max_iter=10  --multirun --config-name attack.yaml
    deps:
    - path: attacks.sh
      hash: md5
      md5: b5d0850e20fa8d2fb2bd47c8949ae6a6
      size: 1568
    - path: model.db
      hash: md5
      md5: c354d3816bc0526c0e94d9fd0a537e72
      size: 217088
    outs:
    - path: attack.db
      hash: md5
      md5: dcb34e1932e7b4b7b50dff50ccc582b5
      size: 110592
  find_best_attack:
    cmd: python -m deckard.layers.find_best attack.yaml
    deps:
    - path: attack.db
      hash: md5
      md5: dcb34e1932e7b4b7b50dff50ccc582b5
      size: 110592
    outs:
    - path: conf/attack/best.yaml
      hash: md5
      md5: e9964377a012776ffccaba4b3e5028fc
      size: 2053
