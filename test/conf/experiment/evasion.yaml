data:
    generate:
        name: classification
        random_state : 0
        n_samples : 2000
        n_features : 20
    sample:
        # _target_: deckard.base.data.sampler.SklearnDataSampler
        random_state : 0
        stratify: True
        train_size : 100
        test_size : 1000
model:
    data: ${data}
    library : sklearn
    init:
        name : sklearn.svm.SVC
        kernel: rbf
        C : 1.0
        probability: true
    art:
        library : sklearn
        _target_ : deckard.base.model.art_pipeline.ArtPipeline
        pipeline:
            initialize:
attack:
    data : ${data}
    model : ${model}
    init:
        name: art.attacks.evasion.HopSkipJump
        batch_size : 64
        max_iter : 10
        max_eval : 10
        init_eval : 10
        model: ${model}
    attack_size : 10
    method : evasion
files:
    data_dir : data
    model_dir : model
    attack_dir : attack
    report_dir : report
    directory : ???
    data_file : data.pkl
    model_file : model.pkl
    attack_file : attack.pkl
    score_dict_file : score_dict.json
scorers:
    accuracy:
        name: sklearn.metrics.accuracy_score
        direction: maximize
        normalize: True
    log_loss:
        name: sklearn.metrics.log_loss
        direction: minimize
        normalize: True
_target_: deckard.base.experiment.Experiment

    